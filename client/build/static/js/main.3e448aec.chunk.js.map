{"version":3,"sources":["component/input/input.js","Login.js","Add.js","Home.js","Book.js","UsersProfile.js","App.js","serviceWorker.js","index.js"],"names":["Input","props","className","inputSize","placeholder","type","onChange","changed","Login","SignupHandler","e","data","name","state","pass","cpass","email","address","axios","post","then","res","console","log","alert","window","location","reload","LoginHandler","setState","redirect","this","push","to","value","target","class","onClick","Component","Form","onSubmitHandler","event","Title","Author","Review","history","date","Date","Home","Search","get","params","search","searchItems","catch","error","viewComment","title","author","commentItems","Logout","localStorage","clear","searchItem","Pingedme","Navbar","bg","variant","Brand","href","Nav","Link","inline","FormControl","Button","map","item","index","bookname","AddReview","ViewReview","withRouter","Books","DeleteReview","review","EditReview","pdate","newreview","NewReview","comment","reviewitems","bookitems","result","pathname","UserProfile","users","about","App","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.3e448aec.chunk.js","sourcesContent":["import React from 'react';\nimport './input.css';\n\n\nfunction Input(props){\n\n    return(\n        <input\n            className={props.inputSize}\n            placeholder={props.placeholder}\n            type={props.type}\n            onChange={props.changed}\n        />\n    )\n\n}\n\n\nexport default Input;\n","import React, { Component } from 'react'\nimport axios from 'axios';\nimport Input from './component/input/input'\nimport \"./Homepage.css\";\nimport { Redirect } from 'react-router';\n\n\nclass Login extends Component {\n    constructor(props) {\n        super( );\n        this.state = {\n            name: \"\",\n            pass: \"\",\n            cpass:\"\",\n            email:\"\",\n            address:\"\"\n        };\n    }\n    SignupHandler = (e) => {\n        var data = {\n            name: this.state.name,\n            pass: this.state.pass,\n            cpass: this.state.cpass,\n            email: this.state.email,\n            address: this.state.address,\n        };\n        if(this.state.pass===this.state.cpass) {\n            axios.post('http://54.234.105.29:8181/signup', data)\n                .then(res => {\n                    console.log(res.data);\n                    if (res.data === \"User registered already\" ||\" 1 user inserted\" ) {\n\n                        alert('Login  to use , you are  registered')\n                        window.location.reload();\n\n\n                    }\n                })\n        }\n        else{\n            alert(\"Password donot matches.\")\n        }\n\n\n    }\n\n    LoginHandler = (e) => {\n        var data = {\n            name: this.state.name,\n            pass: this.state.pass,\n        };\n\n        axios.post('http://54.234.105.29:8181/login', data)\n            .then(res => {\n                console.log(res.data);\n                if (res.data === \"Verified\") {\n                    alert('WELCOME To READERS CORNER')\n                    this.setState({redirect: true});\n\n                }\n                else{\n                    this.setState({redirect: false});\n                    alert('Username or password donot match');\n                }\n            })\n\n\n\n    }\n\n\n    render() {\n\n        if (this.state.redirect) {\n            return (\n                <Redirect push to=\"/home\"/>\n            )\n        }\n        return (\n\n            <div className='s'>\n                <div className=\"main\"><h1>READERS CORNER</h1></div>\n                <div className=\"stdlogin\">\n                    <div className=\"std\"> LOGIN</div>\n                    <div className=\"names\">\n                        Email&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <Input\n                            inputSize=\"inputSall\"\n                            type=\"text\"\n                            value={this.state.name}\n                            changed={e => this.setState({name: e.target.value})}\n                        />\n                    </div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    <br></br>\n\n                    <div className=\"names\">\n                        Password\n                        <Input\n                            inputSize=\"inputSall\"\n                            type=\"password\"\n                            value={this.state.pass}\n                            changed={e => this.setState({pass: e.target.value})}\n                        />\n                    </div>\n                    <button class=\"button button5\" onClick={this.LoginHandler}>LOGIN</button>\n                </div>\n                    <div className=\"description\">\n                        <div className=\"std\">ABOUT </div>\n                        <p className=\"about\"> Welcome to Readers Corner.\n                            <br/>\n                            Login and review books you have read.\n                            Add new books and get others' opinion. Get insights with reviews  on different books.\n                            If you are not a user, signup first.\n                            Get started now!!!!!!!!!!</p>\n                        <div className=\"std\"> SignUp</div>\n                        <div className=\"names\">\n                            Full Name\n                            <Input\n                                inputSize=\"inputSall\"\n                                type=\"text\"\n                                value={this.state.name}\n                                changed={e => this.setState({name: e.target.value})}\n                            />\n                        </div>\n                        <br></br>\n                        <div className=\"names\">\n                            Email&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <Input\n                                inputSize=\"inputSall\"\n                                type=\"text\"\n                                value={this.state.email}\n                                changed={e => this.setState({email: e.target.value})}\n                            />\n                        </div>\n                        <br></br>\n                        <div className=\"names\">\n                            Address&nbsp;&nbsp;&nbsp;&nbsp;\n                            <Input\n                                inputSize=\"inputSall\"\n                                type=\"text\"\n                                value={this.state.address}\n                                changed={e => this.setState({address: e.target.value})}\n                            />\n                        </div>\n                        <br></br>\n                        <div className=\"names\">\n                            Password &nbsp;\n                            <Input\n                                inputSize=\"inputSall\"\n                                type=\"password\"\n                                value={this.state.pass}\n                                changed={e => this.setState({pass: e.target.value})}\n                            />\n                        </div><br/>\n                        <div className=\"names\">\n                            Password &nbsp;&nbsp;\n                            <Input\n                                inputSize=\"inputSall\"\n                                type=\"password\"\n                                value={this.state.cpass}\n                                changed={e => this.setState({cpass: e.target.value})}\n                            />\n                        </div>\n                        <div>\n                            <button className=\"button button5\" onClick={this.SignupHandler}>Signup</button>\n                        </div>\n\n\n\n                    </div>\n\n\n\n\n\n                </div>\n\n\n\n\n        )\n    }\n}\nexport default Login;\n"," import React, { Component } from 'react'\n import axios from 'axios';\n import './App.css';\n import Input from './component/input/input';\n class Form extends Component{\n     constructor(props){\n         super();\n         this.state ={\n             Title: \"\",\n             Author: \"\",\n             Review:\"\",\n             date:new Date()\n         };\n     }\n     onSubmitHandler=(event)=>{\n         var data={\n\n             Title:this.state.Title,\n             Author:this.state.Author,\n             Review: this.state.Review,\n\n         }\n         console.log(data)\n         axios.post('http://54.234.105.29:8181/addbook',data)\n             .then(res => {\n                 console.log(res.data);\n                 if (res.data===\"Book Already in the Stack please review there\"){\n                     alert(\"Book is already in stack please review  there\")\n                     this.props.history.push('/book')\n\n                 }\n                 else if (res.data===\"Book inserted\"){\n                     alert(\"Book Added\")\n                     this.props.history.push('/book')\n                 }\n             })\n             // .catch((error) => {\n             //     console.log(\"Error\");\n             //     alert('error in adding');\n             // });\n     }\n     onChange = date => this.setState({ date })\n     render() {\n         return (\n             <div className=\"App body an\">\n                 <div className=\"an\">\n                         <h1 className=\"Header an\">ADD BOOK</h1>\n\n                             <Input\n                                 inputSize=\"inputSmall\"\n                                 type=\"text\"\n                                 placeholder='Title'\n                                 value={this.state.Title}\n                                 changed={e=>this.setState({Title:e.target.value})}\n                             />\n                             <Input\n                                 inputSize=\"inputSmall\"\n                                 type=\"text\"\n                                 placeholder='Author'\n                                 value={this.state.Author}\n                                 changed={e => this.setState({ Author: e.target.value })}\n                             />\n\n\n                         <br/>\n                         <br/>\n                         <button class=\"button2 button5\"onClick={this.onSubmitHandler}>ADD</button>\n                     </div>\n\n                 </div>\n\n\n         );\n     }\n }\n\n export default Form;\n","import React, { Component } from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport {NavLink, Route, Switch} from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { Form } from \"react-bootstrap\";\nimport { FormControl } from \"react-bootstrap\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./Homepage.css\";\nimport Input from \"./component/input/input\";\n\nclass Home extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            Search: \"\",\n            searchItems: [],\n            searchItem: {},\n            commentItems: [],\n            Pingedme:[]\n\n        };\n    }\n\n    onSubmitHandler = event => {\n        var data = {\n            search: this.state.Search\n        };\n        console.log(this.state.Search);\n        axios\n            .get(\"http://54.234.105.29:8181/searchbooks\", {\n                params: {\n                    search: this.state.Search\n                }\n            })\n            .then(res => {\n                console.log(res.data);\n                this.setState({ searchItems: res.data });\n            })\n            .catch(error => {\n                console.log(\"Error\");\n            });\n\n        console.log(this.props.history.location);\n\n    };\n    viewComment=(title, author)=>{\n        axios\n            .get(\"http://54.234.105.29:8181/viewComment\", {\n                params: {\n                    Title:title,\n                    Author:author\n                }\n            })\n            .then(res => {\n                console.log(res.data);\n                this.setState({ commentItems: res.data });\n            })\n            .catch(error => {\n                console.log(\"Error\");\n            });\n\n    };\n    Logout=(e)=>{\n        localStorage.clear();\n        window.location.reload();\n    }\n\n\n    render() {\n        return (\n            <div className=\"App\">\n                <br />\n                <Navbar bg=\"primary\" variant=\"dark\">\n                    <Navbar.Brand href=\"#home\">Readers Corner\n                    </Navbar.Brand>\n                    <br/>See the details of Users in the site. Add Books you have read  with reviews, delete reviews and modify it.\n                    <Nav className=\"mr-auto\">\n                        &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;\n                        <NavLink to=\"/book\">\n                            <Nav.Link href=\"#book\">Books</Nav.Link>\n\n                        </NavLink> &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;\n\n                        <NavLink to=\"/user-profile\">\n                            <Nav.Link href=\"#usersprofile\">Users</Nav.Link>\n                        </NavLink> &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;\n                        <NavLink to=\"/addbook\">\n                            <Nav.Link href=\"#addbook\">Add New Book</Nav.Link>\n                        </NavLink> &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;\n                        &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;\n                        <button className=\"button5\" onClick={this.Logout}>Logout</button>\n                    </Nav>\n                    <div className=\"right\">\n                        <Form inline>\n                            <FormControl\n                                placeholder=\"Search Books\"\n                                value={this.state.Search}\n                                onChange={e => this.setState({ Search: e.target.value })}\n                                className=\"mr_sm-2\"\n                            />\n\n                            <Button variant=\"outline-light\" onClick={this.onSubmitHandler}>\n                                Search\n                            </Button>\n\n                        </Form>\n                        <div className =\"ok\">\n                        <p>\n                             Copyright@2020\n                              Angel Shrestha\n                            <br/> Readers' Corner\n                        </p>\n                        </div>\n                    </div>\n                </Navbar>\n\n\n\n                    {this.state.searchItems.map((item, index) => {\n                        console.log(item);\n                        return (\n                            <div className=\"search\" >\n                                <div>{item.bookname}</div>\n                                <div>{item.author}</div>\n                                <div>\n                                    <Input\n                                        inputSize=\"inputSmall\"\n                                        type=\"text\"\n                                        placeholder='Review'\n                                        value={this.state.Review}\n                                        changed={e => this.setState({ Review: e.target.value })}\n                                    />\n                                    <br/>&nbsp;&nbsp;&nbsp;\n\n\n                                    <button onClick={() => this.AddReview(item.bookname, item.author,this.state.Review,this.state.date)}>\n                                        Add Review</button></div>\n                                <div>\n\n\n                                    <button onClick={() => this.ViewReview(item.bookname, item.author,)}>\n                                        View Review</button></div>\n\n\n                            </div>\n\n\n                // { this.props.history.location.pathname === \"/search\" && <div className = 'SearchOutput' >\n                //\n                //     {this.state.commentItems.map((item, index) => {\n                //         console.log(item);\n                //         return (\n                //             <div className=\"comment\" >\n                //\n                //                 <div>By:{item.by}</div>\n                //\n                //                 <div>{item.Comments}</div>\n                //             </div>\n                //         )\n                //     })}\n                // </div>\n                // // }\n\n\n\n                        );\n\n                    })}\n\n\n                </div>\n        );\n    }\n}\nexport default withRouter(Home);\n","import React,{Component} from 'react';\nimport axios from 'axios';\nimport './Homepage.css';\nimport Input from './component/input/input';\nimport { Redirect } from 'react-router';\n\nclass Books extends Component{\n    constructor(props) {\n        super();\n        this.state = {\n\n\n            bookitems: [],\n            reviewitems: [],\n            Review:\"\",\n            date:new Date()\n\n        };\n\n    }\n\n    DeleteReview=(title,review,date,author)=>{\n        var data= {\n            Review: review,\n            Title: title,\n            Date: date,\n            Author:author,\n        }\n        axios.post('http://54.234.105.29:8181/DeleteReview', data)\n            .then(res => {\n                if (res.data == 'Review Deleted') {\n                    alert('Review deleted on' + ' '  + title);\n                    this.props.history.push('/home')\n\n                }\n            })\n            .catch((error) => {\n                console.log(\"Error\");\n            });\n    }\n    EditReview=(title,author, review,pdate,newreview,date)=>{\n        var data= {\n            Review: review,\n            Title: title,\n            NewReview: newreview,\n            date: date,\n            Author:author,\n            pdate:pdate,\n        }\n        axios\n            .post(\"http://54.234.105.29:8181/EditReview\", data)\n\n            .then(res => {\n                if (res.data === 'Review Edited')\n                    this.props.history.push('/home');\n\n\n            })\n            .catch((error) => {\n                console.log(\"Error\");\n            });\n    }\n    AddReview=(title, author,comment,date)=>{\n        var data={\n            Review:comment,\n            Title:title,\n            Author:author,\n            Date:date,\n        }\n        if (comment ==\" \"){\n            alert(\"Empty review!! not valid\")\n            this.props.history.push('/book');\n\n        }\n        else {\n            axios.post('http://54.234.105.29:8181/addReview', data)\n                .then(res => {\n                    console.log(comment);\n                    console.log(res.data);\n                    if (res.data === 'Comment Added') {\n                        alert('Review added on' + ' ' + 'book' + ' ' + title);\n                        this.props.history.push('/home');\n                    }\n                })\n                .catch((error) => {\n                    console.log(\"Error\");\n                });\n        }\n    }\n    ViewReview=(title, author)=>{\n        axios\n            .get(\"http://54.234.105.29:8181/viewReview\", {\n                params: {\n                    Title:title\n                }\n            })\n            .then(res => {\n                console.log(res.data);\n                this.setState({ reviewitems: res.data });\n            })\n            .catch(error => {\n                console.log(\"Error\");\n            });\n\n    };\n\n\n    componentDidMount(){\n        axios.get(\"http://54.234.105.29:8181/getbook\")\n            .then(res=>{\n\n\n                this.setState({bookitems:res.data});\n                window.result = res.data;\n                console.log(window.result);\n            })\n        this.props.history.push('/book');\n\n        console.log(this.props.history.location);\n\n    }\n    onChange = date => this.setState({ date })\n    render(\n\n    ){\n\n\n        return(\n            <div>\n\n                { this.props.history.location.pathname === \"/book\" && <div className = 'SearchOutput' >\n                    <div className=\"searchhead search\" >\n                        <div>Title</div>\n                        <div>Author</div>\n                        <div> Add Comments</div>\n                        <div> Review Comments</div>\n                        <div></div>\n                    </div>\n                    {this.state.bookitems.map((item, index) => {\n                        console.log(item);\n                        return (\n                            <div className=\"search\" >\n                                <div>{item.bookname}</div>\n                                <div>{item.author}</div>\n                                <div>\n                                    <Input\n                                        inputSize=\"inputSmall\"\n                                        type=\"text\"\n                                        placeholder='Review'\n                                        value={this.state.Review}\n                                        changed={e => this.setState({ Review: e.target.value })}\n                                    />\n                                      <br/>&nbsp;&nbsp;&nbsp;\n\n\n                                    <button onClick={() => this.AddReview(item.bookname, item.author,this.state.Review,this.state.date)}>\n                                    Add Review</button></div>\n                                <div>\n\n\n                                    <button onClick={() => this.ViewReview(item.bookname, item.author)}>\n                                        View Review</button></div>\n\n\n                            </div>\n\n\n                        );\n\n                    })}\n                </div>\n                }\n                { this.props.history.location.pathname === \"/book\" && <div className = 'comment '>\n\n                    {this.state.reviewitems.map((item, index) => {\n                        console.log(item);\n                        return (\n                            <div className=\"shift\"  >\n                               <div>{item.review}</div>\n                                <div>{item.date}</div>\n\n\n                               <div>\n                                   <Input\n                                       inputSize=\"inputSmall\"\n                                       type=\"text\"\n                                       placeholder='Review'\n                                       value={this.state.newreview}\n                                       changed={e => this.setState({ newreview: e.target.value })}\n                                   />\n                                   <br/>&nbsp;&nbsp;&nbsp;<br/>&nbsp;&nbsp;&nbsp;<br/>&nbsp;&nbsp;&nbsp;<br/>&nbsp;&nbsp;&nbsp;\n                                   <button onClick={() => this.EditReview(item.bookname, item.author,item.review,item.date,this.state.newreview,this.state.date)}>Edit Review</button></div>\n                            <div>&nbsp;&nbsp;&nbsp;<br/>&nbsp;&nbsp;&nbsp;<br/>&nbsp;&nbsp;&nbsp;\n                                <button onClick={() => this.DeleteReview(item.bookname, item.review,item.date,item.author)}>Delete this Review</button></div>\n                            </div>\n                        )\n                    })}\n                </div>\n                }\n\n            </div>\n\n        );\n    }\n}\nexport default Books;\n","import React,{Component} from 'react';\nimport axios from 'axios';\nimport './Homepage.css';\nimport Input from './component/input/input'\n\nclass UserProfile extends Component{\n    constructor(props) {\n        super();\n        this.state = {\n\n\n            users: [],\n\n        };\n\n    }\n\n\n    componentDidMount(){\n        axios.get(\"http://54.234.105.29/getusers\")\n            .then(res=>{\n\n\n                this.setState({users:res.data});\n                window.result = res.data;\n                console.log(window.result);\n            })\n        this.props.history.push('/user-profile');\n\n        console.log(this.props.history.location);\n\n    }\n    render(){\n\n        return(\n            <div>\n\n                { this.props.history.location.pathname === \"/user-profile\" && <div className = 'SearchOutput' >\n                    <div className=\"searchhead search\" >\n                        <div>Name</div>\n                        <div>Email</div>\n                        <div> Address</div>\n\n                    </div>\n                    {this.state.users.map((item, index) => {\n                        console.log(item);\n                        return (\n                            <div className=\"search\" >\n                                <div>{item.name}</div>\n                                <div>{item.email}</div>\n                                <div>{item.address}</div>\n                                <div>{item.about}</div>\n\n\n\n                            </div>\n\n\n                        );\n\n                    })}\n                </div>\n                }\n\n\n            </div>\n\n\n        );\n    }\n}\nexport default UserProfile;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Login from './Login';\nimport Form from './Add';\nimport Home from './Home';\nimport Books from './Book'\nimport UserProfile from \"./UsersProfile\";\nimport './Homepage.css';\n\nfunction App() {\n  {\n    return (\n\n        <Router>\n          <div>\n\n            <Login/>\n            <Switch>\n              <Route path='/home' component={Home}/>\n              <Route path='/login' component={Login}/>\n              <Route path='/book' component={Books}/>\n              <Route path='/addbook' component={Form}/>\n              <Route path='/user-profile' component={UserProfile}/>\n            </Switch>\n\n          </div>\n        </Router>\n    )\n  }\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}